import java.util.* ;
import java.io.*; 
import java.util.ArrayList;
import java.util.Collections;

public class Solution 
{
	public static ArrayList<Integer> nextPermutation(ArrayList<Integer> permutation) 
	{
	   int idx = -1, n = permutation.size();
	   for(int i = n-2; i>= 0; i--){
		   if(permutation.get(i) < permutation.get(i+1)){
			   idx = i;
			   break;
		   }
	   }
	   if(idx == -1){
		   Collections.reverse(permutation);
		   return permutation;
	   }
	   for(int i = n-1; i > idx; i--){
		   if(permutation.get(i) > permutation.get(idx)){
			   int temp = permutation.get(i);
			   permutation.set(i, permutation.get(idx));
			   permutation.set(idx, temp);
			   break;
		   }
	   }
	   int low = idx + 1, high = n-1;
	   while(low< high){
		    int temp = permutation.get(low);
			   permutation.set(low, permutation.get(high));
			   permutation.set(high, temp);
			   low++;
			   high--;
	   }
	   return permutation;
	}
}
