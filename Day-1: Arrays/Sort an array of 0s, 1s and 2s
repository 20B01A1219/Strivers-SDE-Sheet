//O(n + n), O(1)

import java.util.* ;
import java.io.*; 
public class Solution 
{
    public static void sort012(int[] arr)
    {
        //Write your code here
        int zeros = 0, ones = 0, twos = 0;
        for(int i = 0; i < arr.length;i++){
            if(arr[i] == 0){
                zeros++;
            }
            else if(arr[i] == 1){
                ones++;
            }
            else{
                twos++;
            }
        }
        int i = 0;
        while(zeros > 0){
            arr[i] = 0;
            i++;
            zeros--;
        }
        while(ones > 0){
            arr[i] = 1;
            i++;
            ones--;
        }
        while(twos > 0){
            arr[i] = 2;
            i++;
            twos--;
        }
    }
}






//optimal
O(n), O(1)
import java.util.* ;
import java.io.*; 
public class Solution 
{
    public static void sort012(int[] arr)
    {
        //Write your code here
        int low = 0, mid = 0, high = arr.length - 1;
        while(mid <= high){
            if(arr[mid] == 0){
                int temp = arr[low];
                arr[low] = arr[mid];
                arr[mid] = temp;
                mid++;
                low++;
            }
            else if(arr[mid] == 1){
                mid++;
            }
            else{
                int temp = arr[mid];
                arr[mid] = arr[high];
                arr[high] = temp;
                high--;
            }
        }
    }
}
