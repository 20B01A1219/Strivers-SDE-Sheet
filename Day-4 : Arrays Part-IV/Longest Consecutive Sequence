import java.io.*;
import java.util.* ;

public class Solution {
    public static int lengthOfLongestConsecutiveSequence(int[] arr, int N) {
        // Write your code here.
        Arrays.sort(arr);
        int result = 1, cnt = 0, lastsmall = Integer.MIN_VALUE;
        for(int i = 0; i < N; i++){
            if(arr[i] -1 == lastsmall){
                cnt++;
                lastsmall = arr[i];
            }
            else if(arr[i] != lastsmall){
                cnt = 1;
                lastsmall = arr[i];
            }
            result= Math.max(result, cnt);
        }
        return result;
    }
}


//Optimal
class Solution {
    public int longestConsecutive(int[] nums) {
        HashSet<Integer> hs = new HashSet<Integer>();
        if(nums.length == 0) return 0;
        for(int i = 0; i < nums.length; i++){
            hs.add(nums[i]);
        }
        int  max = 1;
       for(int num : nums){
            int cnt = 1;
            if(hs.contains(num-1)){
                continue;
            }
            num++;
            while(hs.contains(num)){
                cnt++;
                 num = num+1;
            }
            max = Math.max(cnt, max);
        }
        return max;
    }
}
